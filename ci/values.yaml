# Here you can find docs bitnami/nginx chart https://github.com/bitnami/charts/blob/main/bitnami/nginx/README.md

image:
  repository: busybox
  tag: latest
  pullPolicy: Always
  debug: true

replicaCount: 0

# 1000m means 100% of processor time 
# 1m means 0.1% of processor time.
# at start pod is being allocated with resources from requests, if it needs more consumption can grow until limits.
# if pod uses more resources than limits in spite of the reason kube-system will perform a forced restart
resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 200m
    memory: 512Mi

livenessProbe:
  enabled: false

readinessProbe:
  enabled: false

service:
  type: ClusterIP

# not needed in this setup
serviceAccount:
  create: false

# not needed in this setup
networkPolicy:
  enabled: false

# CUSTOM: Here you store non secret env vars that will be passed to the pod's environment
extraConfigMapEnvVars:

# this is needed to tell the container to read extra env vars from the dedicated Config Map that we create in extraDeploy
extraEnvVarsCM: "{{ include \"common.names.fullname\" . }}"

podAnnotations:
  # this is needed to trigger re-deploy when only Config Map is changed
  # that is the file name generated by extraDeploy nginx/templates/extra-list.yaml
  # that is why it looks so weird in the file path to calculate hash by its content
  checksum/config: "{{ include (print $.Template.BasePath \"/extra-list.yaml\") . | sha256sum }}"

extraDeploy:
  # this creates Config Map from extraConfigMapEnvVars to be able to calculate checksum/config hash by env vars
  - |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: {{ include "common.names.fullname" . }}
      namespace: {{ include "common.names.namespace" . | quote }}
      labels: {{- include "common.labels.standard" . | nindent 6 }}
        {{- if .Values.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 6 }}
        {{- end }}
      {{- if .Values.commonAnnotations }}
      annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 6 }}
      {{- end }}
    data:
      {{- if .Values.extraConfigMapEnvVars }}
      {{- include "common.tplvalues.render" ( dict "value" .Values.extraConfigMapEnvVars "context" $ ) | trim | nindent 6 }}
      {{- end }}
  - |
    apiVersion: batch/v1
    kind: CronJob
    metadata:
      name: s3-backup-cron
    spec:
      schedule: "*/1 * * * *"
      successfulJobsHistoryLimit: 2
      concurrencyPolicy: Replace
      jobTemplate:
        spec:
          template:
            spec:
              restartPolicy: OnFailure
              containers:
                - name: s3-backup-cron
                  image: ghcr.io/tourmalinecore/pelican-s3-backupper:latest
                  env:
                      - name: AWS_HOST_DOWNLOAD
                        value: {{ .Values.extraConfigMapEnvVars.AWS_HOST_DOWNLOAD }}
                      - name: AWS_ACCESS_KEY_ID_DOWNLOAD
                        value: {{ .Values.extraConfigMapEnvVars.AWS_ACCESS_KEY_ID_DOWNLOAD }}
                      - name: AWS_SECRET_ACCESS_KEY_DOWNLOAD
                        value: {{ .Values.extraConfigMapEnvVars.AWS_SECRET_ACCESS_KEY_DOWNLOAD }}
                      - name: AWS_BUCKET_NAME_DOWNLOAD
                        value: {{ .Values.extraConfigMapEnvVars.AWS_BUCKET_NAME_DOWNLOAD }}
                      - name: AWS_HOST_UPLOAD
                        value: {{ .Values.extraConfigMapEnvVars.AWS_HOST_UPLOAD }}
                      - name: AWS_ACCESS_KEY_ID_UPLOAD
                        value: {{ .Values.extraConfigMapEnvVars.AWS_ACCESS_KEY_ID_UPLOAD }}
                      - name: AWS_SECRET_ACCESS_KEY_UPLOAD
                        value: {{ .Values.extraConfigMapEnvVars.AWS_SECRET_ACCESS_KEY_UPLOAD }}
                      - name: AWS_BUCKET_NAME_UPLOAD
                        value: {{ .Values.extraConfigMapEnvVars.AWS_BUCKET_NAME_UPLOAD }}
                  imagePullPolicy: Always